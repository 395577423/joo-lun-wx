<template>
    <div class="app-container">
        <div class="app-container">
            <avue-crud ref="crud"
                       :page="page"
                       :data="tableData"
                       :table-loading="tableLoading"
                       :option="tableOption"
                       :before-open="beforeOpen"
                       v-model="form"
                       @on-load="getPage"
                       @refresh-change="refreshChange"
                       @row-update="handleUpdate"
                       @row-save="handleSave"
                       @row-del="handleDel"
                       @search-change="searchChange"
                       @selection-change="selectionChange"
            >
            </avue-crud>
        </div>
    </div>
</template>

<script>
    import {
        list${BusinessName},
        get${BusinessName},
        del${BusinessName},
        add${BusinessName},
        update${BusinessName},
        export${BusinessName} } from "@/api/${moduleName}/${businessName}";

        #foreach($column in $columns)
            #if($column.insert && !$column.superColumn && !$column.pk && $column.htmlType == "fileUpload")
            import FileUpload from '@/components/FileUpload';
                #break
            #end
        #end
        #foreach($column in $columns)
            #if($column.insert && !$column.superColumn && !$column.pk && $column.htmlType == "editor")
            import Editor from '@/components/Editor';
                #break
            #end
        #end

    export default {
        name: "${BusinessName}",
        data() {
            return {
                form: {},
                tableData: [],
                page: {
                    total: 0, // 总页数
                    currentPage: 1, // 当前页数
                    pageSize: 10, // 每页显示多少条
                    ascs: [],//升序字段
                    descs: 'create_time',//降序字段
                },
                paramsSearch: {},
                tableLoading: false,
                dialogAppraises: false,
                selectionData: '',
                pointsConfig: null,
                tableOption: {
                    dialogType: 'drawer',
                    border: true,
                    stripe: true,
                    menuAlign: 'center',
                    align: 'center',
                    menuType: 'text',
                    searchShow: true,
                    printBtn: false,
                    dialogWidth: '88%',
                    selection: true,
                    searchMenuSpan: 6,
                    #foreach ($column in $columns)
                        #if($column.pk)
                            rowKey: '$column.javaField',
                            #break
                        #end
                    #end
                    column: [
                        #foreach ($column in $columns)
                            #set($javaField=$column.javaField)
                            #set($parentheseIndex=$column.columnComment.indexOf("（"))
                            #if($parentheseIndex != -1)
                                #set($comment=$column.columnComment.substring(0, $parentheseIndex))
                            #else
                                #set($comment=$column.columnComment)
                            #end
                            #if($column.list &&!$column.pk)
                                {
                                    label: '${comment}',
                                    prop: '${javaField}',
                                    #if(!$colunm.insert)
                                        addDisplay: false,
                                    #end
                                    #if(!$colunm.edit)
                                        editDisplay: false,
                                    #end
                                    #if($column.htmlType == "imageUpload")
                                        type: 'upload',
                                        listType: 'picture-img',
                                        oss: 'ali',
                                        loadText: '附件上传中，请稍等',
                                        tip: '只能上传jpg/png文件，且不超过50kb'
                                    #elseif($column.htmlType == "imageUpload")
                                        type: 'datetime'
                                    #end

                                },
                            #end
                            #if($column.pk)
                            #elseif($column.list && $column.htmlType == "datetime")
                            #elseif($column.list && "" != $column.dictType)
                            #end

                        #end
                    ]
                },


            };
        },
        watch: {},
        created() {
        },
        mounted: function () {
        },
        computed: {},
        methods: {
            selectionChange(list) {
                this.selectionData = list
            },
            beforeOpen(done, type) {
                if (type == 'add') {
                    done()
                } else if (type == 'edit') {
                    this.tableLoading = true
                    get${BusinessName}(this.form.id).then(response => {

                    })
                    done()
                }
            },
            searchChange(params, done) {
                params = this.filterForm(params)
                this.paramsSearch = params
                this.page.currentPage = 1
                this.getPage(this.page, params)
                done()
            },
            /**
             * 刷新回调
             */
            refreshChange(page) {
                this.getPage(this.page)
            },
            getPage(page, params) {
                this.tableLoading = true
                list${BusinessName}(Object.assign({
                    pageNum: page.currentPage,
                    pageSize: page.pageSize,
                    descs: this.page.descs,
                    ascs: this.page.ascs
                }, params, this.paramsSearch)).then(response => {
                    let tableData = response.rows
                    this.tableData = tableData
                    this.page.total = response.total
                    this.page.currentPage = page.currentPage
                    this.page.pageSize = page.pageSize
                    this.tableLoading = false
                }).catch(() => {
                    this.tableLoading = false
                })
            },
            /**
             * @title 数据删除
             * @param row 为当前的数据
             * @param index 为当前删除数据的行数
             *
             **/
            handleDel: function (row, index) {
                var _this = this
                this.$confirm('是否确认删除此数据', '提示', {
                    confirmButtonText: '确定',
                    cancelButtonText: '取消',
                    type: 'warning'
                }).then(function () {
                    return del${BusinessName}(row.id)
                }).then(data => {
                    _this.$message({
                        showClose: true,
                        message: '删除成功',
                        type: 'success'
                    })
                    this.getPage(this.page)
                }).catch(function (err) {
                })
            },
            /**
             * @title 数据更新
             * @param row 为当前的数据
             * @param index 为当前更新数据的行数
             * @param done 为表单关闭函数
             *
             **/
            handleUpdate: function (row, index, done, loading) {
                update${BusinessName}(row).then(data => {
                    this.$message({
                        showClose: true,
                        message: '修改成功',
                        type: 'success'
                    })
                    done()
                    this.getPage(this.page)
                }).catch(() => {
                })
            },
            /**
             * @title 数据添加
             * @param row 为当前的数据
             * @param done 为表单关闭函数
             *
             **/
            handleSave: function (row, done, loading) {
                add${BusinessName}(row).then(data => {
                    this.$message({
                        showClose: true,
                        message: '添加成功',
                        type: 'success'
                    })
                    done()
                    this.getPage(this.page)
                }).catch(() => {
                    loading()
                })
            },
        }
    };
</script>
